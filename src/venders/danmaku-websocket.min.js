var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb,mod)=>function __require() {
    return mod || (0,
    cb[__getOwnPropNames(cb)[0]])((mod = {
        exports: {}
    }).exports, mod),
    mod.exports;
}
;
var require_stdin = __commonJS({
    "<stdin>"(exports, module) {
        /*!
    * Bilibili Player Danmaku Websocket Component v1.4.3 (32)
    * 
    * Copyright 2016 - 2020 Bilibili, Inc.
    * Released in Fri Nov 27 2020 15:45:21 GMT+0800 (China Standard Time)
    */
        !function(e, t) {
            "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.DanmakuWebSocket = t() : e.DanmakuWebSocket = t();
        }("undefined" != typeof self ? self : exports, function() {
            return function(e) {
                function t(i) {
                    if (n[i])
                        return n[i].exports;
                    var o = n[i] = {
                        i,
                        l: false,
                        exports: {}
                    };
                    return e[i].call(o.exports, o, o.exports, t),
                    o.l = true,
                    o.exports;
                }
                var n = {};
                return t.m = e,
                t.c = n,
                t.d = function(e2, n2, i) {
                    t.o(e2, n2) || Object.defineProperty(e2, n2, {
                        configurable: false,
                        enumerable: true,
                        get: i
                    });
                }
                ,
                t.n = function(e2) {
                    var n2 = e2 && e2.__esModule ? function() {
                        return e2.default;
                    }
                    : function() {
                        return e2;
                    }
                    ;
                    return t.d(n2, "a", n2),
                    n2;
                }
                ,
                t.o = function(e2, t2) {
                    return Object.prototype.hasOwnProperty.call(e2, t2);
                }
                ,
                t.p = "",
                t(t.s = 1);
            }([function(e, t, n) {
                "use strict";
                var i = {
                    WS_OP_HEARTBEAT: 2,
                    WS_OP_HEARTBEAT_REPLY: 3,
                    WS_OP_MESSAGE: 5,
                    WS_OP_USER_AUTHENTICATION: 7,
                    WS_OP_CONNECT_SUCCESS: 8,
                    WS_PACKAGE_HEADER_TOTAL_LENGTH: 16,
                    WS_PACKAGE_OFFSET: 0,
                    WS_HEADER_OFFSET: 4,
                    WS_VERSION_OFFSET: 6,
                    WS_OPERATION_OFFSET: 8,
                    WS_SEQUENCE_OFFSET: 12,
                    WS_BODY_PROTOCOL_VERSION_NORMAL: 0,
                    WS_BODY_PROTOCOL_VERSION_DEFLATE: 2,
                    WS_HEADER_DEFAULT_VERSION: 1,
                    WS_HEADER_DEFAULT_OPERATION: 1,
                    WS_HEADER_DEFAULT_SEQUENCE: 1,
                    WS_AUTH_OK: 0,
                    WS_AUTH_TOKEN_ERROR: -101
                };
                t.a = i;
            }
            , function(e, t, n) {
                var i = n(2).default;
                e.exports = i;
            }
            , function(e, t, n) {
                "use strict";
                function i(e2, t2) {
                    if (!(e2 instanceof t2))
                        throw new TypeError("Cannot call a class as a function");
                }
                Object.defineProperty(t, "__esModule", {
                    value: true
                });
                var o = n(3)
                  , r = function() {
                    function e2(e3, t2) {
                        for (var n2 = 0; n2 < t2.length; n2++) {
                            var i2 = t2[n2];
                            i2.enumerable = i2.enumerable || false,
                            i2.configurable = true,
                            "value"in i2 && (i2.writable = true),
                            Object.defineProperty(e3, i2.key, i2);
                        }
                    }
                    return function(t2, n2, i2) {
                        return n2 && e2(t2.prototype, n2),
                        i2 && e2(t2, i2),
                        t2;
                    }
                    ;
                }()
                  , a = function() {
                    function e2(t2) {
                        return i(this, e2),
                        "development" === e2.CONFIG.bundleType && (console.clear(),
                        console.dir(e2.CONFIG)),
                        this.initialize(t2);
                    }
                    return e2.prototype.initialize = function(t2) {
                        return "development" === e2.CONFIG.bundleType && console.log("App Initialized."),
                        this.ws = new o.a(t2),
                        this.getReturn();
                    }
                    ,
                    e2.prototype.getReturn = function() {
                        return "development" === e2.CONFIG.bundleType ? this : {
                            destroy: this.destroy.bind(this),
                            send: this.send.bind(this),
                            getAuthInfo: this.getAuthInfo.bind(this),
                            getRetryCount: this.getRetryCount.bind(this)
                        };
                    }
                    ,
                    e2.prototype.destroy = function() {
                        this.ws && this.ws.destroy();
                    }
                    ,
                    e2.prototype.send = function(e3) {
                        this.ws && this.ws.send(e3);
                    }
                    ,
                    e2.prototype.getAuthInfo = function() {
                        return this.ws && this.ws.getAuthInfo();
                    }
                    ,
                    e2.prototype.getRetryCount = function() {
                        return this.ws && this.ws.getRetryCount();
                    }
                    ,
                    r(e2, null, [{
                        key: "CONFIG",
                        get: function() {
                            return {
                                version: "1.4.3",
                                gitHash: "bf68b6a8",
                                build: "32",
                                bundleType: "release"
                            };
                        }
                    }]),
                    e2;
                }();
                t.default = a;
            }
            , function(e, t, n) {
                "use strict";
                function i(e2, t2) {
                    if (!(e2 instanceof t2))
                        throw new TypeError("Cannot call a class as a function");
                }
                var o = n(0)
                  , r = n(4)
                  , a = n(5)
                  , s = n(6).inflate
                  , u = function() {
                    function e2(t2) {
                        if (i(this, e2),
                        e2.checkOptions(t2)) {
                            var n2 = {
                                url: "",
                                urlList: [],
                                rid: 0,
                                aid: 0,
                                uid: 0,
                                from: -1,
                                retry: true,
                                retryMaxCount: 0,
                                retryInterval: 5,
                                retryThreadCount: 10,
                                connectTimeout: 5e3,
                                retryConnectCount: 3,
                                retryconnectTimeout: 1e4,
                                retryRoundInterval: Math.floor(2 * Math.random()) + 3,
                                customAuthParam: [],
                                fallback: function() {},
                                heartBeatInterval: 30,
                                onReceivedMessage: function() {},
                                onReceiveAuthRes: function() {},
                                onHeartBeatReply: function() {},
                                onInitialized: function() {},
                                onOpen: function() {},
                                onClose: function() {},
                                onError: function() {},
                                onListConnectError: function() {}
                            };
                            this.options = a.a.extend({}, n2, t2),
                            this.wsBinaryHeaderList = a.a.extend([], r.a),
                            this.authInfo = {
                                origin: "",
                                encode: ""
                            },
                            0 !== this.options.urlList.length && 0 !== this.options.retryMaxCount && this.options.retryMaxCount < this.options.urlList.length && (this.options.retryMaxCount = this.options.urlList.length - 1),
                            this.state = {
                                retryCount: 0,
                                listConnectFinishedCount: 0,
                                index: 0,
                                connectTimeoutTimes: 0
                            },
                            this.callbackQueueList = {
                                onInitializedQueue: [],
                                onOpenQueue: [],
                                onCloseQueue: [],
                                onErrorQueue: [],
                                onReceivedMessageQueue: [],
                                onHeartBeatReplyQueue: [],
                                onRetryFallbackQueue: [],
                                onListConnectErrorQueue: [],
                                onReceiveAuthResQueue: []
                            },
                            this.HEART_BEAT_INTERVAL = 0,
                            this.CONNECT_TIMEOUT = 0,
                            this.mixinCallback().initialize(this.options.urlList.length > 0 ? this.options.urlList[0] : this.options.url);
                        }
                    }
                    return e2.prototype.initialize = function(e3) {
                        var t2 = this
                          , n2 = "MozWebSocket"in window ? window.MozWebSocket : window.WebSocket
                          , i2 = this.options;
                        try {
                            this.ws = new n2(e3),
                            this.ws.binaryType = "arraybuffer",
                            this.ws.onopen = this.onOpen.bind(this),
                            this.ws.onmessage = this.onMessage.bind(this),
                            this.ws.onclose = this.onClose.bind(this),
                            this.ws.onerror = this.onError.bind(this),
                            a.a.callFunction(this.callbackQueueList.onInitializedQueue),
                            this.callbackQueueList.onInitializedQueue = [];
                            var o2 = this.state.connectTimeoutTimes >= 3 ? i2.retryconnectTimeout : i2.connectTimeout;
                            this.CONNECT_TIMEOUT = setTimeout(function() {
                                t2.state.connectTimeoutTimes += 1,
                                console.error("connect timeout ", t2.state.connectTimeoutTimes),
                                t2.ws.close();
                            }, o2);
                        } catch (e4) {
                            "function" == typeof i2.fallback && i2.fallback();
                        }
                        return this;
                    }
                    ,
                    e2.prototype.onOpen = function() {
                        return a.a.callFunction(this.callbackQueueList.onOpenQueue),
                        this.state.connectTimeoutTimes = 0,
                        this.CONNECT_TIMEOUT && clearTimeout(this.CONNECT_TIMEOUT),
                        this.userAuthentication(),
                        this;
                    }
                    ,
                    e2.prototype.userAuthentication = function() {
                        var e3 = this
                          , t2 = this.options
                          , n2 = {
                            uid: parseInt(t2.uid, 10),
                            roomid: parseInt(t2.rid, 10),
                            protover: parseInt(t2.protover, 10) || o.a.WS_BODY_PROTOCOL_VERSION_NORMAL
                        }
                          , i2 = "";
                        t2.aid && (n2.aid = parseInt(t2.aid, 10)),
                        t2.from > 0 && (n2.from = parseInt(t2.from, 10) || 7);
                        for (var r2 = 0; r2 < t2.customAuthParam.length; r2++) {
                            var a2 = t2.customAuthParam[r2]
                              , s2 = a2.type || "string";
                            switch (void 0 !== n2[a2.key] && console.error("Token has the same key already! \u3010" + a2.key + "\u3011"),
                            a2.key.toString() && a2.value.toString() || console.error("Invalid customAuthParam, missing key or value! \u3010" + a2.key + "\u3011-\u3010" + a2.value + "\u3011"),
                            s2) {
                            case "string":
                                n2[a2.key] = a2.value;
                                break;
                            case "number":
                                n2[a2.key] = parseInt(a2.value, 10);
                                break;
                            case "boolean":
                                n2[a2.key] = !!n2[a2.value];
                                break;
                            default:
                                return void console.error("Unsupported customAuthParam type!\u3010" + s2 + "\u3011");
                            }
                        }
                        i2 = this.convertToArrayBuffer(JSON.stringify(n2), o.a.WS_OP_USER_AUTHENTICATION),
                        this.authInfo.origin = n2,
                        this.authInfo.encode = i2,
                        setTimeout(function() {
                            e3.ws.send(i2);
                        }, 0);
                    }
                    ,
                    e2.prototype.getAuthInfo = function() {
                        return this.authInfo;
                    }
                    ,
                    e2.prototype.heartBeat = function() {
                        var e3 = this;
                        clearTimeout(this.HEART_BEAT_INTERVAL);
                        var t2 = this.convertToArrayBuffer({}, o.a.WS_OP_HEARTBEAT);
                        this.ws.send(t2),
                        this.HEART_BEAT_INTERVAL = setTimeout(function() {
                            e3.heartBeat();
                        }, 1e3 * this.options.heartBeatInterval);
                    }
                    ,
                    e2.prototype.onMessage = function(e3) {
                        var t2 = this;
                        try {
                            var n2 = this.convertToObject(e3.data);
                            if (n2 instanceof Array)
                                n2.forEach(function(e4) {
                                    t2.onMessage(e4);
                                });
                            else if (n2 instanceof Object)
                                switch (n2.op) {
                                case o.a.WS_OP_HEARTBEAT_REPLY:
                                    this.onHeartBeatReply(n2.body);
                                    break;
                                case o.a.WS_OP_MESSAGE:
                                    this.onMessageReply(n2.body, n2.seq);
                                    break;
                                case o.a.WS_OP_CONNECT_SUCCESS:
                                    if (0 !== n2.body.length && n2.body[0])
                                        switch (n2.body[0].code) {
                                        case o.a.WS_AUTH_OK:
                                            this.heartBeat();
                                            break;
                                        case o.a.WS_AUTH_TOKEN_ERROR:
                                            this.options.retry = false,
                                            "function" == typeof this.options.onReceiveAuthRes && this.options.onReceiveAuthRes(n2.body);
                                            break;
                                        default:
                                            this.onClose();
                                        }
                                    else
                                        this.heartBeat();
                                }
                        } catch (e4) {
                            console.error("WebSocket Error: ", e4);
                        }
                        return this;
                    }
                    ,
                    e2.prototype.onMessageReply = function(e3, t2) {
                        var n2 = this;
                        try {
                            e3 instanceof Array ? e3.forEach(function(e4) {
                                n2.onMessageReply(e4, t2);
                            }) : e3 instanceof Object && "function" == typeof this.options.onReceivedMessage && this.options.onReceivedMessage(e3, t2);
                        } catch (e4) {
                            console.error("On Message Resolve Error: ", e4);
                        }
                    }
                    ,
                    e2.prototype.onHeartBeatReply = function(e3) {
                        a.a.callFunction(this.callbackQueueList.onHeartBeatReplyQueue, e3);
                    }
                    ,
                    e2.prototype.onClose = function() {
                        var e3 = this
                          , t2 = this.options.urlList.length;
                        return a.a.callFunction(this.callbackQueueList.onCloseQueue),
                        clearTimeout(this.HEART_BEAT_INTERVAL),
                        this.options.retry ? (this.checkRetryState() ? setTimeout(function() {
                            console.error("Danmaku Websocket Retry .", e3.state.retryCount),
                            e3.state.index += 1,
                            0 === t2 || e3.state.retryCount > e3.options.retryThreadCount ? setTimeout(function() {
                                e3.initialize(e3.options.url);
                            }, 1e3 * e3.options.retryRoundInterval) : 0 !== t2 && e3.state.index > t2 - 1 ? (e3.state.index = 0,
                            e3.state.listConnectFinishedCount += 1,
                            1 === e3.state.listConnectFinishedCount && a.a.callFunction(e3.callbackQueueList.onListConnectErrorQueue),
                            setTimeout(function() {
                                e3.initialize(e3.options.urlList[e3.state.index]);
                            }, 1e3 * e3.options.retryRoundInterval)) : e3.initialize(e3.options.urlList[e3.state.index]);
                        }, 1e3 * this.options.retryInterval) : (console.error("Danmaku Websocket Retry Failed."),
                        a.a.callFunction(this.callbackQueueList.onRetryFallbackQueue)),
                        this) : this;
                    }
                    ,
                    e2.prototype.onError = function(e3) {
                        return console.error("Danmaku Websocket On Error.", e3),
                        a.a.callFunction(this.callbackQueueList.onErrorQueue, e3),
                        this;
                    }
                    ,
                    e2.prototype.destroy = function() {
                        this.HEART_BEAT_INTERVAL && clearTimeout(this.HEART_BEAT_INTERVAL),
                        this.CONNECT_TIMEOUT && clearTimeout(this.CONNECT_TIMEOUT),
                        this.options.retry = false,
                        this.ws && this.ws.close(),
                        this.ws = null;
                    }
                    ,
                    e2.prototype.convertToArrayBuffer = function(e3, t2) {
                        this.encoder || (this.encoder = a.a.getEncoder());
                        var n2 = new ArrayBuffer(o.a.WS_PACKAGE_HEADER_TOTAL_LENGTH)
                          , i2 = new DataView(n2,o.a.WS_PACKAGE_OFFSET)
                          , r2 = this.encoder.encode(e3);
                        return i2.setInt32(o.a.WS_PACKAGE_OFFSET, o.a.WS_PACKAGE_HEADER_TOTAL_LENGTH + r2.byteLength),
                        this.wsBinaryHeaderList[2].value = t2,
                        this.wsBinaryHeaderList.forEach(function(e4) {
                            4 === e4.bytes ? i2.setInt32(e4.offset, e4.value) : 2 === e4.bytes && i2.setInt16(e4.offset, e4.value);
                        }),
                        a.a.mergeArrayBuffer(n2, r2);
                    }
                    ,
                    e2.prototype.convertToObject = function(e3) {
                        var t2 = new DataView(e3)
                          , n2 = {
                            body: []
                        };
                        if (n2.packetLen = t2.getInt32(o.a.WS_PACKAGE_OFFSET),
                        this.wsBinaryHeaderList.forEach(function(e4) {
                            4 === e4.bytes ? n2[e4.key] = t2.getInt32(e4.offset) : 2 === e4.bytes && (n2[e4.key] = t2.getInt16(e4.offset));
                        }),
                        n2.packetLen < e3.byteLength && this.convertToObject(e3.slice(0, n2.packetLen)),
                        this.decoder || (this.decoder = a.a.getDecoder()),
                        !n2.op || o.a.WS_OP_MESSAGE !== n2.op && n2.op !== o.a.WS_OP_CONNECT_SUCCESS)
                            n2.op && o.a.WS_OP_HEARTBEAT_REPLY === n2.op && (n2.body = {
                                count: t2.getInt32(o.a.WS_PACKAGE_HEADER_TOTAL_LENGTH)
                            });
                        else
                            for (var i2 = o.a.WS_PACKAGE_OFFSET, r2 = n2.packetLen, u2 = "", c = ""; i2 < e3.byteLength; i2 += r2) {
                                r2 = t2.getInt32(i2),
                                u2 = t2.getInt16(i2 + o.a.WS_HEADER_OFFSET);
                                try {
                                    if (n2.ver === o.a.WS_BODY_PROTOCOL_VERSION_DEFLATE) {
                                        var l = e3.slice(i2 + u2, i2 + r2)
                                          , f = s(new Uint8Array(l));
                                        c = this.convertToObject(f.buffer).body;
                                    } else {
                                        var h = this.decoder.decode(e3.slice(i2 + u2, i2 + r2));
                                        c = 0 !== h.length ? JSON.parse(h) : null;
                                    }
                                    c && n2.body.push(c);
                                } catch (t3) {
                                    console.error("decode body error:", new Uint8Array(e3), n2, t3);
                                }
                            }
                        return n2;
                    }
                    ,
                    e2.prototype.send = function(e3) {
                        this.ws && this.ws.send(e3);
                    }
                    ,
                    e2.prototype.addCallback = function(e3, t2) {
                        return "function" == typeof e3 && t2 instanceof Array && t2.push(e3),
                        this;
                    }
                    ,
                    e2.prototype.mixinCallback = function() {
                        var e3 = this.options
                          , t2 = this.callbackQueueList;
                        return this.addCallback(e3.onReceivedMessage, t2.onReceivedMessageQueue).addCallback(e3.onHeartBeatReply, t2.onHeartBeatReplyQueue).addCallback(e3.onInitialized, t2.onInitializedQueue).addCallback(e3.onOpen, t2.onOpenQueue).addCallback(e3.onClose, t2.onCloseQueue).addCallback(e3.onError, t2.onErrorQueue).addCallback(e3.onRetryFallback, t2.onRetryFallbackQueue).addCallback(e3.onListConnectError, t2.onListConnectErrorQueue).addCallback(e3.onReceiveAuthRes, t2.onReceiveAuthResQueue),
                        this;
                    }
                    ,
                    e2.prototype.getRetryCount = function() {
                        return this.state.retryCount;
                    }
                    ,
                    e2.prototype.checkRetryState = function() {
                        var e3 = this.options
                          , t2 = false;
                        return (0 === e3.retryMaxCount || this.state.retryCount < e3.retryMaxCount) && (this.state.retryCount += 1,
                        t2 = true),
                        t2;
                    }
                    ,
                    e2.checkOptions = function(e3) {
                        return e3 || e3 instanceof Object ? e3.url ? !!e3.rid || (console.error("WebSocket Initialize options rid(cid) missing."),
                        false) : (console.error("WebSocket Initialize options url missing."),
                        false) : (console.error("WebSocket Initialize options missing or error.", e3),
                        false);
                    }
                    ,
                    e2;
                }();
                t.a = u;
            }
            , function(e, t, n) {
                "use strict";
                var i = n(0)
                  , o = [{
                    name: "Header Length",
                    key: "headerLen",
                    bytes: 2,
                    offset: i.a.WS_HEADER_OFFSET,
                    value: i.a.WS_PACKAGE_HEADER_TOTAL_LENGTH
                }, {
                    name: "Protocol Version",
                    key: "ver",
                    bytes: 2,
                    offset: i.a.WS_VERSION_OFFSET,
                    value: i.a.WS_HEADER_DEFAULT_VERSION
                }, {
                    name: "Operation",
                    key: "op",
                    bytes: 4,
                    offset: i.a.WS_OPERATION_OFFSET,
                    value: i.a.WS_HEADER_DEFAULT_OPERATION
                }, {
                    name: "Sequence Id",
                    key: "seq",
                    bytes: 4,
                    offset: i.a.WS_SEQUENCE_OFFSET,
                    value: i.a.WS_HEADER_DEFAULT_SEQUENCE
                }];
                t.a = o;
            }
            , function(e, t, n) {
                "use strict";
                var i = {
                    getDecoder: function() {
                        return window.TextDecoder ? new window.TextDecoder() : {
                            decode: function(e2) {
                                return decodeURIComponent(window.escape(String.fromCharCode.apply(String, new Uint8Array(e2))));
                            }
                        };
                    },
                    getEncoder: function() {
                        return window.TextEncoder ? new window.TextEncoder() : {
                            encode: function(e2) {
                                for (var t2 = new ArrayBuffer(e2.length), n2 = new Uint8Array(t2), i2 = 0, o = e2.length; i2 < o; i2++)
                                    n2[i2] = e2.charCodeAt(i2);
                                return t2;
                            }
                        };
                    },
                    mergeArrayBuffer: function(e2, t2) {
                        var n2 = new Uint8Array(e2)
                          , i2 = new Uint8Array(t2)
                          , o = new Uint8Array(n2.byteLength + i2.byteLength);
                        return o.set(n2, 0),
                        o.set(i2, n2.byteLength),
                        o.buffer;
                    },
                    callFunction: function(e2, t2) {
                        return e2 instanceof Array && e2.length ? (e2.forEach(function(e3) {
                            return "function" == typeof e3 && e3(t2);
                        }),
                        null) : "function" == typeof e2 && e2(t2);
                    },
                    extend: function(e2) {
                        for (var t2 = arguments.length, n2 = Array(t2 > 1 ? t2 - 1 : 0), i2 = 1; i2 < t2; i2++)
                            n2[i2 - 1] = arguments[i2];
                        var o = e2 || {};
                        return o instanceof Object && n2.forEach(function(e3) {
                            e3 instanceof Object && Object.keys(e3).forEach(function(t3) {
                                o[t3] = e3[t3];
                            });
                        }),
                        o;
                    }
                };
                t.a = i;
            }
            , function(e, t, n) {
                var i, i;
                !function(t2) {
                    e.exports = t2();
                }(function() {
                    return function e2(t2, n2, o) {
                        function r(s2, u) {
                            if (!n2[s2]) {
                                if (!t2[s2]) {
                                    var c = "function" == typeof i && i;
                                    if (!u && c)
                                        return i(s2, true);
                                    if (a)
                                        return a(s2, true);
                                    var l = new Error("Cannot find module '" + s2 + "'");
                                    throw l.code = "MODULE_NOT_FOUND",
                                    l;
                                }
                                var f = n2[s2] = {
                                    exports: {}
                                };
                                t2[s2][0].call(f.exports, function(e3) {
                                    return r(t2[s2][1][e3] || e3);
                                }, f, f.exports, e2, t2, n2, o);
                            }
                            return n2[s2].exports;
                        }
                        for (var a = "function" == typeof i && i, s = 0; s < o.length; s++)
                            r(o[s]);
                        return r;
                    }({
                        1: [function(e2, t2, n2) {
                            "use strict";
                            var i2 = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
                            n2.assign = function(e3) {
                                for (var t3, n3, i3 = Array.prototype.slice.call(arguments, 1); i3.length; ) {
                                    var o2 = i3.shift();
                                    if (o2) {
                                        if ("object" != typeof o2)
                                            throw new TypeError(o2 + "must be non-object");
                                        for (var r2 in o2)
                                            t3 = o2,
                                            n3 = r2,
                                            Object.prototype.hasOwnProperty.call(t3, n3) && (e3[r2] = o2[r2]);
                                    }
                                }
                                return e3;
                            }
                            ,
                            n2.shrinkBuf = function(e3, t3) {
                                return e3.length === t3 ? e3 : e3.subarray ? e3.subarray(0, t3) : (e3.length = t3,
                                e3);
                            }
                            ;
                            var o = {
                                arraySet: function(e3, t3, n3, i3, o2) {
                                    if (t3.subarray && e3.subarray)
                                        e3.set(t3.subarray(n3, n3 + i3), o2);
                                    else
                                        for (var r2 = 0; r2 < i3; r2++)
                                            e3[o2 + r2] = t3[n3 + r2];
                                },
                                flattenChunks: function(e3) {
                                    var t3, n3, i3, o2, r2, a;
                                    for (t3 = i3 = 0,
                                    n3 = e3.length; t3 < n3; t3++)
                                        i3 += e3[t3].length;
                                    for (a = new Uint8Array(i3),
                                    t3 = o2 = 0,
                                    n3 = e3.length; t3 < n3; t3++)
                                        r2 = e3[t3],
                                        a.set(r2, o2),
                                        o2 += r2.length;
                                    return a;
                                }
                            }
                              , r = {
                                arraySet: function(e3, t3, n3, i3, o2) {
                                    for (var r2 = 0; r2 < i3; r2++)
                                        e3[o2 + r2] = t3[n3 + r2];
                                },
                                flattenChunks: function(e3) {
                                    return [].concat.apply([], e3);
                                }
                            };
                            n2.setTyped = function(e3) {
                                e3 ? (n2.Buf8 = Uint8Array,
                                n2.Buf16 = Uint16Array,
                                n2.Buf32 = Int32Array,
                                n2.assign(n2, o)) : (n2.Buf8 = Array,
                                n2.Buf16 = Array,
                                n2.Buf32 = Array,
                                n2.assign(n2, r));
                            }
                            ,
                            n2.setTyped(i2);
                        }
                        , {}],
                        2: [function(e2, t2, n2) {
                            "use strict";
                            function i2(e3, t3) {
                                if (t3 < 65534 && (e3.subarray && a || !e3.subarray && r))
                                    return String.fromCharCode.apply(null, o.shrinkBuf(e3, t3));
                                for (var n3 = "", i3 = 0; i3 < t3; i3++)
                                    n3 += String.fromCharCode(e3[i3]);
                                return n3;
                            }
                            var o = e2("./common")
                              , r = true
                              , a = true;
                            try {
                                String.fromCharCode.apply(null, [0]);
                            } catch (e3) {
                                r = false;
                            }
                            try {
                                String.fromCharCode.apply(null, new Uint8Array(1));
                            } catch (e3) {
                                a = false;
                            }
                            for (var s = new o.Buf8(256), u = 0; u < 256; u++)
                                s[u] = 252 <= u ? 6 : 248 <= u ? 5 : 240 <= u ? 4 : 224 <= u ? 3 : 192 <= u ? 2 : 1;
                            s[254] = s[254] = 1,
                            n2.string2buf = function(e3) {
                                var t3, n3, i3, r2, a2, s2 = e3.length, u2 = 0;
                                for (r2 = 0; r2 < s2; r2++)
                                    55296 == (64512 & (n3 = e3.charCodeAt(r2))) && r2 + 1 < s2 && 56320 == (64512 & (i3 = e3.charCodeAt(r2 + 1))) && (n3 = 65536 + (n3 - 55296 << 10) + (i3 - 56320),
                                    r2++),
                                    u2 += n3 < 128 ? 1 : n3 < 2048 ? 2 : n3 < 65536 ? 3 : 4;
                                for (t3 = new o.Buf8(u2),
                                r2 = a2 = 0; a2 < u2; r2++)
                                    55296 == (64512 & (n3 = e3.charCodeAt(r2))) && r2 + 1 < s2 && 56320 == (64512 & (i3 = e3.charCodeAt(r2 + 1))) && (n3 = 65536 + (n3 - 55296 << 10) + (i3 - 56320),
                                    r2++),
                                    t3[a2++] = n3 < 128 ? n3 : (t3[a2++] = n3 < 2048 ? 192 | n3 >>> 6 : (t3[a2++] = n3 < 65536 ? 224 | n3 >>> 12 : (t3[a2++] = 240 | n3 >>> 18,
                                    128 | n3 >>> 12 & 63),
                                    128 | n3 >>> 6 & 63),
                                    128 | 63 & n3);
                                return t3;
                            }
                            ,
                            n2.buf2binstring = function(e3) {
                                return i2(e3, e3.length);
                            }
                            ,
                            n2.binstring2buf = function(e3) {
                                for (var t3 = new o.Buf8(e3.length), n3 = 0, i3 = t3.length; n3 < i3; n3++)
                                    t3[n3] = e3.charCodeAt(n3);
                                return t3;
                            }
                            ,
                            n2.buf2string = function(e3, t3) {
                                var n3, o2, r2, a2, u2 = t3 || e3.length, c = new Array(2 * u2);
                                for (n3 = o2 = 0; n3 < u2; )
                                    if ((r2 = e3[n3++]) < 128)
                                        c[o2++] = r2;
                                    else if (4 < (a2 = s[r2]))
                                        c[o2++] = 65533,
                                        n3 += a2 - 1;
                                    else {
                                        for (r2 &= 2 === a2 ? 31 : 3 === a2 ? 15 : 7; 1 < a2 && n3 < u2; )
                                            r2 = r2 << 6 | 63 & e3[n3++],
                                            a2--;
                                        c[o2++] = 1 < a2 ? 65533 : r2 < 65536 ? r2 : (r2 -= 65536,
                                        c[o2++] = 55296 | r2 >> 10 & 1023,
                                        56320 | 1023 & r2);
                                    }
                                return i2(c, o2);
                            }
                            ,
                            n2.utf8border = function(e3, t3) {
                                var n3;
                                for ((t3 = t3 || e3.length) > e3.length && (t3 = e3.length),
                                n3 = t3 - 1; 0 <= n3 && 128 == (192 & e3[n3]); )
                                    n3--;
                                return n3 < 0 ? t3 : 0 === n3 ? t3 : n3 + s[e3[n3]] > t3 ? n3 : t3;
                            }
                            ;
                        }
                        , {
                            "./common": 1
                        }],
                        3: [function(e2, t2, n2) {
                            "use strict";
                            t2.exports = function(e3, t3, n3, i2) {
                                for (var o = 65535 & e3 | 0, r = e3 >>> 16 & 65535 | 0, a = 0; 0 !== n3; ) {
                                    for (n3 -= a = 2e3 < n3 ? 2e3 : n3; r = r + (o = o + t3[i2++] | 0) | 0,
                                    --a; )
                                        ;
                                    o %= 65521,
                                    r %= 65521;
                                }
                                return o | r << 16 | 0;
                            }
                            ;
                        }
                        , {}],
                        4: [function(e2, t2, n2) {
                            "use strict";
                            t2.exports = {
                                Z_NO_FLUSH: 0,
                                Z_PARTIAL_FLUSH: 1,
                                Z_SYNC_FLUSH: 2,
                                Z_FULL_FLUSH: 3,
                                Z_FINISH: 4,
                                Z_BLOCK: 5,
                                Z_TREES: 6,
                                Z_OK: 0,
                                Z_STREAM_END: 1,
                                Z_NEED_DICT: 2,
                                Z_ERRNO: -1,
                                Z_STREAM_ERROR: -2,
                                Z_DATA_ERROR: -3,
                                Z_BUF_ERROR: -5,
                                Z_NO_COMPRESSION: 0,
                                Z_BEST_SPEED: 1,
                                Z_BEST_COMPRESSION: 9,
                                Z_DEFAULT_COMPRESSION: -1,
                                Z_FILTERED: 1,
                                Z_HUFFMAN_ONLY: 2,
                                Z_RLE: 3,
                                Z_FIXED: 4,
                                Z_DEFAULT_STRATEGY: 0,
                                Z_BINARY: 0,
                                Z_TEXT: 1,
                                Z_UNKNOWN: 2,
                                Z_DEFLATED: 8
                            };
                        }
                        , {}],
                        5: [function(e2, t2, n2) {
                            "use strict";
                            var i2 = function() {
                                for (var e3, t3 = [], n3 = 0; n3 < 256; n3++) {
                                    e3 = n3;
                                    for (var i3 = 0; i3 < 8; i3++)
                                        e3 = 1 & e3 ? 3988292384 ^ e3 >>> 1 : e3 >>> 1;
                                    t3[n3] = e3;
                                }
                                return t3;
                            }();
                            t2.exports = function(e3, t3, n3, o) {
                                var r = i2
                                  , a = o + n3;
                                e3 ^= -1;
                                for (var s = o; s < a; s++)
                                    e3 = e3 >>> 8 ^ r[255 & (e3 ^ t3[s])];
                                return -1 ^ e3;
                            }
                            ;
                        }
                        , {}],
                        6: [function(e2, t2, n2) {
                            "use strict";
                            t2.exports = function() {
                                this.text = 0,
                                this.time = 0,
                                this.xflags = 0,
                                this.os = 0,
                                this.extra = null,
                                this.extra_len = 0,
                                this.name = "",
                                this.comment = "",
                                this.hcrc = 0,
                                this.done = false;
                            }
                            ;
                        }
                        , {}],
                        7: [function(e2, t2, n2) {
                            "use strict";
                            t2.exports = function(e3, t3) {
                                var n3, i2, o, r, a, s, u, c, l, f, h, d, b, _, p, y, m, w, k, E, g, v, T, A, S;
                                n3 = e3.state,
                                i2 = e3.next_in,
                                A = e3.input,
                                o = i2 + (e3.avail_in - 5),
                                r = e3.next_out,
                                S = e3.output,
                                a = r - (t3 - e3.avail_out),
                                s = r + (e3.avail_out - 257),
                                u = n3.dmax,
                                c = n3.wsize,
                                l = n3.whave,
                                f = n3.wnext,
                                h = n3.window,
                                d = n3.hold,
                                b = n3.bits,
                                _ = n3.lencode,
                                p = n3.distcode,
                                y = (1 << n3.lenbits) - 1,
                                m = (1 << n3.distbits) - 1;
                                e: do {
                                    b < 15 && (d += A[i2++] << b,
                                    b += 8,
                                    d += A[i2++] << b,
                                    b += 8),
                                    w = _[d & y];
                                    t: for (; ; ) {
                                        if (d >>>= k = w >>> 24,
                                        b -= k,
                                        0 == (k = w >>> 16 & 255))
                                            S[r++] = 65535 & w;
                                        else {
                                            if (!(16 & k)) {
                                                if (0 == (64 & k)) {
                                                    w = _[(65535 & w) + (d & (1 << k) - 1)];
                                                    continue t;
                                                }
                                                if (32 & k) {
                                                    n3.mode = 12;
                                                    break e;
                                                }
                                                e3.msg = "invalid literal/length code",
                                                n3.mode = 30;
                                                break e;
                                            }
                                            E = 65535 & w,
                                            (k &= 15) && (b < k && (d += A[i2++] << b,
                                            b += 8),
                                            E += d & (1 << k) - 1,
                                            d >>>= k,
                                            b -= k),
                                            b < 15 && (d += A[i2++] << b,
                                            b += 8,
                                            d += A[i2++] << b,
                                            b += 8),
                                            w = p[d & m];
                                            n: for (; ; ) {
                                                if (d >>>= k = w >>> 24,
                                                b -= k,
                                                !(16 & (k = w >>> 16 & 255))) {
                                                    if (0 == (64 & k)) {
                                                        w = p[(65535 & w) + (d & (1 << k) - 1)];
                                                        continue n;
                                                    }
                                                    e3.msg = "invalid distance code",
                                                    n3.mode = 30;
                                                    break e;
                                                }
                                                if (g = 65535 & w,
                                                b < (k &= 15) && (d += A[i2++] << b,
                                                (b += 8) < k && (d += A[i2++] << b,
                                                b += 8)),
                                                u < (g += d & (1 << k) - 1)) {
                                                    e3.msg = "invalid distance too far back",
                                                    n3.mode = 30;
                                                    break e;
                                                }
                                                if (d >>>= k,
                                                b -= k,
                                                (k = r - a) < g) {
                                                    if (l < (k = g - k) && n3.sane) {
                                                        e3.msg = "invalid distance too far back",
                                                        n3.mode = 30;
                                                        break e;
                                                    }
                                                    if (T = h,
                                                    (v = 0) === f) {
                                                        if (v += c - k,
                                                        k < E) {
                                                            for (E -= k; S[r++] = h[v++],
                                                            --k; )
                                                                ;
                                                            v = r - g,
                                                            T = S;
                                                        }
                                                    } else if (f < k) {
                                                        if (v += c + f - k,
                                                        (k -= f) < E) {
                                                            for (E -= k; S[r++] = h[v++],
                                                            --k; )
                                                                ;
                                                            if (v = 0,
                                                            f < E) {
                                                                for (E -= k = f; S[r++] = h[v++],
                                                                --k; )
                                                                    ;
                                                                v = r - g,
                                                                T = S;
                                                            }
                                                        }
                                                    } else if (v += f - k,
                                                    k < E) {
                                                        for (E -= k; S[r++] = h[v++],
                                                        --k; )
                                                            ;
                                                        v = r - g,
                                                        T = S;
                                                    }
                                                    for (; 2 < E; )
                                                        S[r++] = T[v++],
                                                        S[r++] = T[v++],
                                                        S[r++] = T[v++],
                                                        E -= 3;
                                                    E && (S[r++] = T[v++],
                                                    1 < E && (S[r++] = T[v++]));
                                                } else {
                                                    for (v = r - g; S[r++] = S[v++],
                                                    S[r++] = S[v++],
                                                    S[r++] = S[v++],
                                                    2 < (E -= 3); )
                                                        ;
                                                    E && (S[r++] = S[v++],
                                                    1 < E && (S[r++] = S[v++]));
                                                }
                                                break;
                                            }
                                        }
                                        break;
                                    }
                                } while (i2 < o && r < s);
                                i2 -= E = b >> 3,
                                d &= (1 << (b -= E << 3)) - 1,
                                e3.next_in = i2,
                                e3.next_out = r,
                                e3.avail_in = i2 < o ? o - i2 + 5 : 5 - (i2 - o),
                                e3.avail_out = r < s ? s - r + 257 : 257 - (r - s),
                                n3.hold = d,
                                n3.bits = b;
                            }
                            ;
                        }
                        , {}],
                        8: [function(e2, t2, n2) {
                            "use strict";
                            function i2(e3) {
                                return (e3 >>> 24 & 255) + (e3 >>> 8 & 65280) + ((65280 & e3) << 8) + ((255 & e3) << 24);
                            }
                            function o() {
                                this.mode = 0,
                                this.last = false,
                                this.wrap = 0,
                                this.havedict = false,
                                this.flags = 0,
                                this.dmax = 0,
                                this.check = 0,
                                this.total = 0,
                                this.head = null,
                                this.wbits = 0,
                                this.wsize = 0,
                                this.whave = 0,
                                this.wnext = 0,
                                this.window = null,
                                this.hold = 0,
                                this.bits = 0,
                                this.length = 0,
                                this.offset = 0,
                                this.extra = 0,
                                this.lencode = null,
                                this.distcode = null,
                                this.lenbits = 0,
                                this.distbits = 0,
                                this.ncode = 0,
                                this.nlen = 0,
                                this.ndist = 0,
                                this.have = 0,
                                this.next = null,
                                this.lens = new d.Buf16(320),
                                this.work = new d.Buf16(288),
                                this.lendyn = null,
                                this.distdyn = null,
                                this.sane = 0,
                                this.back = 0,
                                this.was = 0;
                            }
                            function r(e3) {
                                var t3;
                                return e3 && e3.state ? (t3 = e3.state,
                                e3.total_in = e3.total_out = t3.total = 0,
                                e3.msg = "",
                                t3.wrap && (e3.adler = 1 & t3.wrap),
                                t3.mode = g,
                                t3.last = 0,
                                t3.havedict = 0,
                                t3.dmax = 32768,
                                t3.head = null,
                                t3.hold = 0,
                                t3.bits = 0,
                                t3.lencode = t3.lendyn = new d.Buf32(v),
                                t3.distcode = t3.distdyn = new d.Buf32(T),
                                t3.sane = 1,
                                t3.back = -1,
                                k) : E;
                            }
                            function a(e3) {
                                var t3;
                                return e3 && e3.state ? ((t3 = e3.state).wsize = 0,
                                t3.whave = 0,
                                t3.wnext = 0,
                                r(e3)) : E;
                            }
                            function s(e3, t3) {
                                var n3, i3;
                                return e3 && e3.state ? (i3 = e3.state,
                                t3 < 0 ? (n3 = 0,
                                t3 = -t3) : (n3 = 1 + (t3 >> 4),
                                t3 < 48 && (t3 &= 15)),
                                t3 && (t3 < 8 || 15 < t3) ? E : (null !== i3.window && i3.wbits !== t3 && (i3.window = null),
                                i3.wrap = n3,
                                i3.wbits = t3,
                                a(e3))) : E;
                            }
                            function u(e3, t3) {
                                var n3, i3;
                                return e3 ? (i3 = new o(),
                                (e3.state = i3).window = null,
                                (n3 = s(e3, t3)) !== k && (e3.state = null),
                                n3) : E;
                            }
                            function c(e3) {
                                if (A) {
                                    var t3;
                                    for (f = new d.Buf32(512),
                                    h = new d.Buf32(32),
                                    t3 = 0; t3 < 144; )
                                        e3.lens[t3++] = 8;
                                    for (; t3 < 256; )
                                        e3.lens[t3++] = 9;
                                    for (; t3 < 280; )
                                        e3.lens[t3++] = 7;
                                    for (; t3 < 288; )
                                        e3.lens[t3++] = 8;
                                    for (y(m, e3.lens, 0, 288, f, 0, e3.work, {
                                        bits: 9
                                    }),
                                    t3 = 0; t3 < 32; )
                                        e3.lens[t3++] = 5;
                                    y(w, e3.lens, 0, 32, h, 0, e3.work, {
                                        bits: 5
                                    }),
                                    A = false;
                                }
                                e3.lencode = f,
                                e3.lenbits = 9,
                                e3.distcode = h,
                                e3.distbits = 5;
                            }
                            function l(e3, t3, n3, i3) {
                                var o2, r2 = e3.state;
                                return null === r2.window && (r2.wsize = 1 << r2.wbits,
                                r2.wnext = 0,
                                r2.whave = 0,
                                r2.window = new d.Buf8(r2.wsize)),
                                i3 >= r2.wsize ? (d.arraySet(r2.window, t3, n3 - r2.wsize, r2.wsize, 0),
                                r2.wnext = 0,
                                r2.whave = r2.wsize) : (i3 < (o2 = r2.wsize - r2.wnext) && (o2 = i3),
                                d.arraySet(r2.window, t3, n3 - i3, o2, r2.wnext),
                                (i3 -= o2) ? (d.arraySet(r2.window, t3, n3 - i3, i3, 0),
                                r2.wnext = i3,
                                r2.whave = r2.wsize) : (r2.wnext += o2,
                                r2.wnext === r2.wsize && (r2.wnext = 0),
                                r2.whave < r2.wsize && (r2.whave += o2))),
                                0;
                            }
                            var f, h, d = e2("../utils/common"), b = e2("./adler32"), _ = e2("./crc32"), p = e2("./inffast"), y = e2("./inftrees"), m = 1, w = 2, k = 0, E = -2, g = 1, v = 852, T = 592, A = true;
                            n2.inflateReset = a,
                            n2.inflateReset2 = s,
                            n2.inflateResetKeep = r,
                            n2.inflateInit = function(e3) {
                                return u(e3, 15);
                            }
                            ,
                            n2.inflateInit2 = u,
                            n2.inflate = function(e3, t3) {
                                var n3, o2, r2, a2, s2, u2, f2, h2, v2, T2, A2, S, O, R, C, x, I, L, N, B, F, H, D, U, W = 0, z = new d.Buf8(4), P = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                                if (!e3 || !e3.state || !e3.output || !e3.input && 0 !== e3.avail_in)
                                    return E;
                                12 === (n3 = e3.state).mode && (n3.mode = 13),
                                s2 = e3.next_out,
                                r2 = e3.output,
                                f2 = e3.avail_out,
                                a2 = e3.next_in,
                                o2 = e3.input,
                                u2 = e3.avail_in,
                                h2 = n3.hold,
                                v2 = n3.bits,
                                T2 = u2,
                                A2 = f2,
                                H = k;
                                e: for (; ; )
                                    switch (n3.mode) {
                                    case g:
                                        if (0 === n3.wrap) {
                                            n3.mode = 13;
                                            break;
                                        }
                                        for (; v2 < 16; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        if (2 & n3.wrap && 35615 === h2) {
                                            z[n3.check = 0] = 255 & h2,
                                            z[1] = h2 >>> 8 & 255,
                                            n3.check = _(n3.check, z, 2, 0),
                                            v2 = h2 = 0,
                                            n3.mode = 2;
                                            break;
                                        }
                                        if (n3.flags = 0,
                                        n3.head && (n3.head.done = false),
                                        !(1 & n3.wrap) || (((255 & h2) << 8) + (h2 >> 8)) % 31) {
                                            e3.msg = "incorrect header check",
                                            n3.mode = 30;
                                            break;
                                        }
                                        if (8 != (15 & h2)) {
                                            e3.msg = "unknown compression method",
                                            n3.mode = 30;
                                            break;
                                        }
                                        if (v2 -= 4,
                                        F = 8 + (15 & (h2 >>>= 4)),
                                        0 === n3.wbits)
                                            n3.wbits = F;
                                        else if (F > n3.wbits) {
                                            e3.msg = "invalid window size",
                                            n3.mode = 30;
                                            break;
                                        }
                                        n3.dmax = 1 << F,
                                        e3.adler = n3.check = 1,
                                        n3.mode = 512 & h2 ? 10 : 12,
                                        v2 = h2 = 0;
                                        break;
                                    case 2:
                                        for (; v2 < 16; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        if (n3.flags = h2,
                                        8 != (255 & n3.flags)) {
                                            e3.msg = "unknown compression method",
                                            n3.mode = 30;
                                            break;
                                        }
                                        if (57344 & n3.flags) {
                                            e3.msg = "unknown header flags set",
                                            n3.mode = 30;
                                            break;
                                        }
                                        n3.head && (n3.head.text = h2 >> 8 & 1),
                                        512 & n3.flags && (z[0] = 255 & h2,
                                        z[1] = h2 >>> 8 & 255,
                                        n3.check = _(n3.check, z, 2, 0)),
                                        v2 = h2 = 0,
                                        n3.mode = 3;
                                    case 3:
                                        for (; v2 < 32; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        n3.head && (n3.head.time = h2),
                                        512 & n3.flags && (z[0] = 255 & h2,
                                        z[1] = h2 >>> 8 & 255,
                                        z[2] = h2 >>> 16 & 255,
                                        z[3] = h2 >>> 24 & 255,
                                        n3.check = _(n3.check, z, 4, 0)),
                                        v2 = h2 = 0,
                                        n3.mode = 4;
                                    case 4:
                                        for (; v2 < 16; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        n3.head && (n3.head.xflags = 255 & h2,
                                        n3.head.os = h2 >> 8),
                                        512 & n3.flags && (z[0] = 255 & h2,
                                        z[1] = h2 >>> 8 & 255,
                                        n3.check = _(n3.check, z, 2, 0)),
                                        v2 = h2 = 0,
                                        n3.mode = 5;
                                    case 5:
                                        if (1024 & n3.flags) {
                                            for (; v2 < 16; ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            n3.length = h2,
                                            n3.head && (n3.head.extra_len = h2),
                                            512 & n3.flags && (z[0] = 255 & h2,
                                            z[1] = h2 >>> 8 & 255,
                                            n3.check = _(n3.check, z, 2, 0)),
                                            v2 = h2 = 0;
                                        } else
                                            n3.head && (n3.head.extra = null);
                                        n3.mode = 6;
                                    case 6:
                                        if (1024 & n3.flags && (u2 < (S = n3.length) && (S = u2),
                                        S && (n3.head && (F = n3.head.extra_len - n3.length,
                                        n3.head.extra || (n3.head.extra = new Array(n3.head.extra_len)),
                                        d.arraySet(n3.head.extra, o2, a2, S, F)),
                                        512 & n3.flags && (n3.check = _(n3.check, o2, S, a2)),
                                        u2 -= S,
                                        a2 += S,
                                        n3.length -= S),
                                        n3.length))
                                            break e;
                                        n3.length = 0,
                                        n3.mode = 7;
                                    case 7:
                                        if (2048 & n3.flags) {
                                            if (0 === u2)
                                                break e;
                                            for (S = 0; F = o2[a2 + S++],
                                            n3.head && F && n3.length < 65536 && (n3.head.name += String.fromCharCode(F)),
                                            F && S < u2; )
                                                ;
                                            if (512 & n3.flags && (n3.check = _(n3.check, o2, S, a2)),
                                            u2 -= S,
                                            a2 += S,
                                            F)
                                                break e;
                                        } else
                                            n3.head && (n3.head.name = null);
                                        n3.length = 0,
                                        n3.mode = 8;
                                    case 8:
                                        if (4096 & n3.flags) {
                                            if (0 === u2)
                                                break e;
                                            for (S = 0; F = o2[a2 + S++],
                                            n3.head && F && n3.length < 65536 && (n3.head.comment += String.fromCharCode(F)),
                                            F && S < u2; )
                                                ;
                                            if (512 & n3.flags && (n3.check = _(n3.check, o2, S, a2)),
                                            u2 -= S,
                                            a2 += S,
                                            F)
                                                break e;
                                        } else
                                            n3.head && (n3.head.comment = null);
                                        n3.mode = 9;
                                    case 9:
                                        if (512 & n3.flags) {
                                            for (; v2 < 16; ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            if (h2 !== (65535 & n3.check)) {
                                                e3.msg = "header crc mismatch",
                                                n3.mode = 30;
                                                break;
                                            }
                                            v2 = h2 = 0;
                                        }
                                        n3.head && (n3.head.hcrc = n3.flags >> 9 & 1,
                                        n3.head.done = true),
                                        e3.adler = n3.check = 0,
                                        n3.mode = 12;
                                        break;
                                    case 10:
                                        for (; v2 < 32; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        e3.adler = n3.check = i2(h2),
                                        v2 = h2 = 0,
                                        n3.mode = 11;
                                    case 11:
                                        if (0 === n3.havedict)
                                            return e3.next_out = s2,
                                            e3.avail_out = f2,
                                            e3.next_in = a2,
                                            e3.avail_in = u2,
                                            n3.hold = h2,
                                            n3.bits = v2,
                                            2;
                                        e3.adler = n3.check = 1,
                                        n3.mode = 12;
                                    case 12:
                                        if (5 === t3 || 6 === t3)
                                            break e;
                                    case 13:
                                        if (n3.last) {
                                            h2 >>>= 7 & v2,
                                            v2 -= 7 & v2,
                                            n3.mode = 27;
                                            break;
                                        }
                                        for (; v2 < 3; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        switch (n3.last = 1 & h2,
                                        v2 -= 1,
                                        3 & (h2 >>>= 1)) {
                                        case 0:
                                            n3.mode = 14;
                                            break;
                                        case 1:
                                            if (c(n3),
                                            n3.mode = 20,
                                            6 !== t3)
                                                break;
                                            h2 >>>= 2,
                                            v2 -= 2;
                                            break e;
                                        case 2:
                                            n3.mode = 17;
                                            break;
                                        case 3:
                                            e3.msg = "invalid block type",
                                            n3.mode = 30;
                                        }
                                        h2 >>>= 2,
                                        v2 -= 2;
                                        break;
                                    case 14:
                                        for (h2 >>>= 7 & v2,
                                        v2 -= 7 & v2; v2 < 32; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        if ((65535 & h2) != (h2 >>> 16 ^ 65535)) {
                                            e3.msg = "invalid stored block lengths",
                                            n3.mode = 30;
                                            break;
                                        }
                                        if (n3.length = 65535 & h2,
                                        v2 = h2 = 0,
                                        n3.mode = 15,
                                        6 === t3)
                                            break e;
                                    case 15:
                                        n3.mode = 16;
                                    case 16:
                                        if (S = n3.length) {
                                            if (u2 < S && (S = u2),
                                            f2 < S && (S = f2),
                                            0 === S)
                                                break e;
                                            d.arraySet(r2, o2, a2, S, s2),
                                            u2 -= S,
                                            a2 += S,
                                            f2 -= S,
                                            s2 += S,
                                            n3.length -= S;
                                            break;
                                        }
                                        n3.mode = 12;
                                        break;
                                    case 17:
                                        for (; v2 < 14; ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        if (n3.nlen = 257 + (31 & h2),
                                        h2 >>>= 5,
                                        v2 -= 5,
                                        n3.ndist = 1 + (31 & h2),
                                        h2 >>>= 5,
                                        v2 -= 5,
                                        n3.ncode = 4 + (15 & h2),
                                        h2 >>>= 4,
                                        v2 -= 4,
                                        286 < n3.nlen || 30 < n3.ndist) {
                                            e3.msg = "too many length or distance symbols",
                                            n3.mode = 30;
                                            break;
                                        }
                                        n3.have = 0,
                                        n3.mode = 18;
                                    case 18:
                                        for (; n3.have < n3.ncode; ) {
                                            for (; v2 < 3; ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            n3.lens[P[n3.have++]] = 7 & h2,
                                            h2 >>>= 3,
                                            v2 -= 3;
                                        }
                                        for (; n3.have < 19; )
                                            n3.lens[P[n3.have++]] = 0;
                                        if (n3.lencode = n3.lendyn,
                                        n3.lenbits = 7,
                                        D = {
                                            bits: n3.lenbits
                                        },
                                        H = y(0, n3.lens, 0, 19, n3.lencode, 0, n3.work, D),
                                        n3.lenbits = D.bits,
                                        H) {
                                            e3.msg = "invalid code lengths set",
                                            n3.mode = 30;
                                            break;
                                        }
                                        n3.have = 0,
                                        n3.mode = 19;
                                    case 19:
                                        for (; n3.have < n3.nlen + n3.ndist; ) {
                                            for (; x = (W = n3.lencode[h2 & (1 << n3.lenbits) - 1]) >>> 16 & 255,
                                            I = 65535 & W,
                                            !((C = W >>> 24) <= v2); ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            if (I < 16)
                                                h2 >>>= C,
                                                v2 -= C,
                                                n3.lens[n3.have++] = I;
                                            else {
                                                if (16 === I) {
                                                    for (U = C + 2; v2 < U; ) {
                                                        if (0 === u2)
                                                            break e;
                                                        u2--,
                                                        h2 += o2[a2++] << v2,
                                                        v2 += 8;
                                                    }
                                                    if (h2 >>>= C,
                                                    v2 -= C,
                                                    0 === n3.have) {
                                                        e3.msg = "invalid bit length repeat",
                                                        n3.mode = 30;
                                                        break;
                                                    }
                                                    F = n3.lens[n3.have - 1],
                                                    S = 3 + (3 & h2),
                                                    h2 >>>= 2,
                                                    v2 -= 2;
                                                } else if (17 === I) {
                                                    for (U = C + 3; v2 < U; ) {
                                                        if (0 === u2)
                                                            break e;
                                                        u2--,
                                                        h2 += o2[a2++] << v2,
                                                        v2 += 8;
                                                    }
                                                    v2 -= C,
                                                    F = 0,
                                                    S = 3 + (7 & (h2 >>>= C)),
                                                    h2 >>>= 3,
                                                    v2 -= 3;
                                                } else {
                                                    for (U = C + 7; v2 < U; ) {
                                                        if (0 === u2)
                                                            break e;
                                                        u2--,
                                                        h2 += o2[a2++] << v2,
                                                        v2 += 8;
                                                    }
                                                    v2 -= C,
                                                    F = 0,
                                                    S = 11 + (127 & (h2 >>>= C)),
                                                    h2 >>>= 7,
                                                    v2 -= 7;
                                                }
                                                if (n3.have + S > n3.nlen + n3.ndist) {
                                                    e3.msg = "invalid bit length repeat",
                                                    n3.mode = 30;
                                                    break;
                                                }
                                                for (; S--; )
                                                    n3.lens[n3.have++] = F;
                                            }
                                        }
                                        if (30 === n3.mode)
                                            break;
                                        if (0 === n3.lens[256]) {
                                            e3.msg = "invalid code -- missing end-of-block",
                                            n3.mode = 30;
                                            break;
                                        }
                                        if (n3.lenbits = 9,
                                        D = {
                                            bits: n3.lenbits
                                        },
                                        H = y(m, n3.lens, 0, n3.nlen, n3.lencode, 0, n3.work, D),
                                        n3.lenbits = D.bits,
                                        H) {
                                            e3.msg = "invalid literal/lengths set",
                                            n3.mode = 30;
                                            break;
                                        }
                                        if (n3.distbits = 6,
                                        n3.distcode = n3.distdyn,
                                        D = {
                                            bits: n3.distbits
                                        },
                                        H = y(w, n3.lens, n3.nlen, n3.ndist, n3.distcode, 0, n3.work, D),
                                        n3.distbits = D.bits,
                                        H) {
                                            e3.msg = "invalid distances set",
                                            n3.mode = 30;
                                            break;
                                        }
                                        if (n3.mode = 20,
                                        6 === t3)
                                            break e;
                                    case 20:
                                        n3.mode = 21;
                                    case 21:
                                        if (6 <= u2 && 258 <= f2) {
                                            e3.next_out = s2,
                                            e3.avail_out = f2,
                                            e3.next_in = a2,
                                            e3.avail_in = u2,
                                            n3.hold = h2,
                                            n3.bits = v2,
                                            p(e3, A2),
                                            s2 = e3.next_out,
                                            r2 = e3.output,
                                            f2 = e3.avail_out,
                                            a2 = e3.next_in,
                                            o2 = e3.input,
                                            u2 = e3.avail_in,
                                            h2 = n3.hold,
                                            v2 = n3.bits,
                                            12 === n3.mode && (n3.back = -1);
                                            break;
                                        }
                                        for (n3.back = 0; x = (W = n3.lencode[h2 & (1 << n3.lenbits) - 1]) >>> 16 & 255,
                                        I = 65535 & W,
                                        !((C = W >>> 24) <= v2); ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        if (x && 0 == (240 & x)) {
                                            for (L = C,
                                            N = x,
                                            B = I; x = (W = n3.lencode[B + ((h2 & (1 << L + N) - 1) >> L)]) >>> 16 & 255,
                                            I = 65535 & W,
                                            !(L + (C = W >>> 24) <= v2); ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            h2 >>>= L,
                                            v2 -= L,
                                            n3.back += L;
                                        }
                                        if (h2 >>>= C,
                                        v2 -= C,
                                        n3.back += C,
                                        n3.length = I,
                                        0 === x) {
                                            n3.mode = 26;
                                            break;
                                        }
                                        if (32 & x) {
                                            n3.back = -1,
                                            n3.mode = 12;
                                            break;
                                        }
                                        if (64 & x) {
                                            e3.msg = "invalid literal/length code",
                                            n3.mode = 30;
                                            break;
                                        }
                                        n3.extra = 15 & x,
                                        n3.mode = 22;
                                    case 22:
                                        if (n3.extra) {
                                            for (U = n3.extra; v2 < U; ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            n3.length += h2 & (1 << n3.extra) - 1,
                                            h2 >>>= n3.extra,
                                            v2 -= n3.extra,
                                            n3.back += n3.extra;
                                        }
                                        n3.was = n3.length,
                                        n3.mode = 23;
                                    case 23:
                                        for (; x = (W = n3.distcode[h2 & (1 << n3.distbits) - 1]) >>> 16 & 255,
                                        I = 65535 & W,
                                        !((C = W >>> 24) <= v2); ) {
                                            if (0 === u2)
                                                break e;
                                            u2--,
                                            h2 += o2[a2++] << v2,
                                            v2 += 8;
                                        }
                                        if (0 == (240 & x)) {
                                            for (L = C,
                                            N = x,
                                            B = I; x = (W = n3.distcode[B + ((h2 & (1 << L + N) - 1) >> L)]) >>> 16 & 255,
                                            I = 65535 & W,
                                            !(L + (C = W >>> 24) <= v2); ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            h2 >>>= L,
                                            v2 -= L,
                                            n3.back += L;
                                        }
                                        if (h2 >>>= C,
                                        v2 -= C,
                                        n3.back += C,
                                        64 & x) {
                                            e3.msg = "invalid distance code",
                                            n3.mode = 30;
                                            break;
                                        }
                                        n3.offset = I,
                                        n3.extra = 15 & x,
                                        n3.mode = 24;
                                    case 24:
                                        if (n3.extra) {
                                            for (U = n3.extra; v2 < U; ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            n3.offset += h2 & (1 << n3.extra) - 1,
                                            h2 >>>= n3.extra,
                                            v2 -= n3.extra,
                                            n3.back += n3.extra;
                                        }
                                        if (n3.offset > n3.dmax) {
                                            e3.msg = "invalid distance too far back",
                                            n3.mode = 30;
                                            break;
                                        }
                                        n3.mode = 25;
                                    case 25:
                                        if (0 === f2)
                                            break e;
                                        if (S = A2 - f2,
                                        n3.offset > S) {
                                            if ((S = n3.offset - S) > n3.whave && n3.sane) {
                                                e3.msg = "invalid distance too far back",
                                                n3.mode = 30;
                                                break;
                                            }
                                            O = S > n3.wnext ? (S -= n3.wnext,
                                            n3.wsize - S) : n3.wnext - S,
                                            S > n3.length && (S = n3.length),
                                            R = n3.window;
                                        } else
                                            R = r2,
                                            O = s2 - n3.offset,
                                            S = n3.length;
                                        for (f2 < S && (S = f2),
                                        f2 -= S,
                                        n3.length -= S; r2[s2++] = R[O++],
                                        --S; )
                                            ;
                                        0 === n3.length && (n3.mode = 21);
                                        break;
                                    case 26:
                                        if (0 === f2)
                                            break e;
                                        r2[s2++] = n3.length,
                                        f2--,
                                        n3.mode = 21;
                                        break;
                                    case 27:
                                        if (n3.wrap) {
                                            for (; v2 < 32; ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 |= o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            if (A2 -= f2,
                                            e3.total_out += A2,
                                            n3.total += A2,
                                            A2 && (e3.adler = n3.check = n3.flags ? _(n3.check, r2, A2, s2 - A2) : b(n3.check, r2, A2, s2 - A2)),
                                            A2 = f2,
                                            (n3.flags ? h2 : i2(h2)) !== n3.check) {
                                                e3.msg = "incorrect data check",
                                                n3.mode = 30;
                                                break;
                                            }
                                            v2 = h2 = 0;
                                        }
                                        n3.mode = 28;
                                    case 28:
                                        if (n3.wrap && n3.flags) {
                                            for (; v2 < 32; ) {
                                                if (0 === u2)
                                                    break e;
                                                u2--,
                                                h2 += o2[a2++] << v2,
                                                v2 += 8;
                                            }
                                            if (h2 !== (4294967295 & n3.total)) {
                                                e3.msg = "incorrect length check",
                                                n3.mode = 30;
                                                break;
                                            }
                                            v2 = h2 = 0;
                                        }
                                        n3.mode = 29;
                                    case 29:
                                        H = 1;
                                        break e;
                                    case 30:
                                        H = -3;
                                        break e;
                                    case 31:
                                        return -4;
                                    case 32:
                                    default:
                                        return E;
                                    }
                                return e3.next_out = s2,
                                e3.avail_out = f2,
                                e3.next_in = a2,
                                e3.avail_in = u2,
                                n3.hold = h2,
                                n3.bits = v2,
                                (n3.wsize || A2 !== e3.avail_out && n3.mode < 30 && (n3.mode < 27 || 4 !== t3)) && l(e3, e3.output, e3.next_out, A2 - e3.avail_out) ? (n3.mode = 31,
                                -4) : (T2 -= e3.avail_in,
                                A2 -= e3.avail_out,
                                e3.total_in += T2,
                                e3.total_out += A2,
                                n3.total += A2,
                                n3.wrap && A2 && (e3.adler = n3.check = n3.flags ? _(n3.check, r2, A2, e3.next_out - A2) : b(n3.check, r2, A2, e3.next_out - A2)),
                                e3.data_type = n3.bits + (n3.last ? 64 : 0) + (12 === n3.mode ? 128 : 0) + (20 === n3.mode || 15 === n3.mode ? 256 : 0),
                                (0 === T2 && 0 === A2 || 4 === t3) && H === k && (H = -5),
                                H);
                            }
                            ,
                            n2.inflateEnd = function(e3) {
                                if (!e3 || !e3.state)
                                    return E;
                                var t3 = e3.state;
                                return t3.window && (t3.window = null),
                                e3.state = null,
                                k;
                            }
                            ,
                            n2.inflateGetHeader = function(e3, t3) {
                                var n3;
                                return e3 && e3.state ? 0 == (2 & (n3 = e3.state).wrap) ? E : ((n3.head = t3).done = false,
                                k) : E;
                            }
                            ,
                            n2.inflateSetDictionary = function(e3, t3) {
                                var n3, i3 = t3.length;
                                return e3 && e3.state ? 0 !== (n3 = e3.state).wrap && 11 !== n3.mode ? E : 11 === n3.mode && b(1, t3, i3, 0) !== n3.check ? -3 : l(e3, t3, i3, i3) ? (n3.mode = 31,
                                -4) : (n3.havedict = 1,
                                k) : E;
                            }
                            ,
                            n2.inflateInfo = "pako inflate (from Nodeca project)";
                        }
                        , {
                            "../utils/common": 1,
                            "./adler32": 3,
                            "./crc32": 5,
                            "./inffast": 7,
                            "./inftrees": 9
                        }],
                        9: [function(e2, t2, n2) {
                            "use strict";
                            var i2 = e2("../utils/common")
                              , o = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]
                              , r = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]
                              , a = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]
                              , s = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
                            t2.exports = function(e3, t3, n3, u, c, l, f, h) {
                                var d, b, _, p, y, m, w, k, E, g = h.bits, v = 0, T = 0, A = 0, S = 0, O = 0, R = 0, C = 0, x = 0, I = 0, L = 0, N = null, B = 0, F = new i2.Buf16(16), H = new i2.Buf16(16), D = null, U = 0;
                                for (v = 0; v <= 15; v++)
                                    F[v] = 0;
                                for (T = 0; T < u; T++)
                                    F[t3[n3 + T]]++;
                                for (O = g,
                                S = 15; 1 <= S && 0 === F[S]; S--)
                                    ;
                                if (S < O && (O = S),
                                0 === S)
                                    return c[l++] = 20971520,
                                    c[l++] = 20971520,
                                    h.bits = 1,
                                    0;
                                for (A = 1; A < S && 0 === F[A]; A++)
                                    ;
                                for (O < A && (O = A),
                                v = x = 1; v <= 15; v++)
                                    if (x <<= 1,
                                    (x -= F[v]) < 0)
                                        return -1;
                                if (0 < x && (0 === e3 || 1 !== S))
                                    return -1;
                                for (H[1] = 0,
                                v = 1; v < 15; v++)
                                    H[v + 1] = H[v] + F[v];
                                for (T = 0; T < u; T++)
                                    0 !== t3[n3 + T] && (f[H[t3[n3 + T]]++] = T);
                                if (m = 0 === e3 ? (N = D = f,
                                19) : 1 === e3 ? (N = o,
                                B -= 257,
                                D = r,
                                U -= 257,
                                256) : (N = a,
                                D = s,
                                -1),
                                v = A,
                                y = l,
                                C = T = L = 0,
                                _ = -1,
                                p = (I = 1 << (R = O)) - 1,
                                1 === e3 && 852 < I || 2 === e3 && 592 < I)
                                    return 1;
                                for (; ; ) {
                                    for (w = v - C,
                                    E = f[T] < m ? (k = 0,
                                    f[T]) : f[T] > m ? (k = D[U + f[T]],
                                    N[B + f[T]]) : (k = 96,
                                    0),
                                    d = 1 << v - C,
                                    A = b = 1 << R; c[y + (L >> C) + (b -= d)] = w << 24 | k << 16 | E | 0,
                                    0 !== b; )
                                        ;
                                    for (d = 1 << v - 1; L & d; )
                                        d >>= 1;
                                    if (0 !== d ? (L &= d - 1,
                                    L += d) : L = 0,
                                    T++,
                                    0 == --F[v]) {
                                        if (v === S)
                                            break;
                                        v = t3[n3 + f[T]];
                                    }
                                    if (O < v && (L & p) !== _) {
                                        for (0 === C && (C = O),
                                        y += A,
                                        x = 1 << (R = v - C); R + C < S && !((x -= F[R + C]) <= 0); )
                                            R++,
                                            x <<= 1;
                                        if (I += 1 << R,
                                        1 === e3 && 852 < I || 2 === e3 && 592 < I)
                                            return 1;
                                        c[_ = L & p] = O << 24 | R << 16 | y - l | 0;
                                    }
                                }
                                return 0 !== L && (c[y + L] = v - C << 24 | 64 << 16 | 0),
                                h.bits = O,
                                0;
                            }
                            ;
                        }
                        , {
                            "../utils/common": 1
                        }],
                        10: [function(e2, t2, n2) {
                            "use strict";
                            t2.exports = {
                                2: "need dictionary",
                                1: "stream end",
                                0: "",
                                "-1": "file error",
                                "-2": "stream error",
                                "-3": "data error",
                                "-4": "insufficient memory",
                                "-5": "buffer error",
                                "-6": "incompatible version"
                            };
                        }
                        , {}],
                        11: [function(e2, t2, n2) {
                            "use strict";
                            t2.exports = function() {
                                this.input = null,
                                this.next_in = 0,
                                this.avail_in = 0,
                                this.total_in = 0,
                                this.output = null,
                                this.next_out = 0,
                                this.avail_out = 0,
                                this.total_out = 0,
                                this.msg = "",
                                this.state = null,
                                this.data_type = 2,
                                this.adler = 0;
                            }
                            ;
                        }
                        , {}],
                        "/lib/inflate.js": [function(e2, t2, n2) {
                            "use strict";
                            function i2(e3) {
                                if (!(this instanceof i2))
                                    return new i2(e3);
                                this.options = a.assign({
                                    chunkSize: 16384,
                                    windowBits: 0,
                                    to: ""
                                }, e3 || {});
                                var t3 = this.options;
                                t3.raw && 0 <= t3.windowBits && t3.windowBits < 16 && (t3.windowBits = -t3.windowBits,
                                0 === t3.windowBits && (t3.windowBits = -15)),
                                !(0 <= t3.windowBits && t3.windowBits < 16) || e3 && e3.windowBits || (t3.windowBits += 32),
                                15 < t3.windowBits && t3.windowBits < 48 && 0 == (15 & t3.windowBits) && (t3.windowBits |= 15),
                                this.err = 0,
                                this.msg = "",
                                this.ended = false,
                                this.chunks = [],
                                this.strm = new l(),
                                this.strm.avail_out = 0;
                                var n3 = r.inflateInit2(this.strm, t3.windowBits);
                                if (n3 !== u.Z_OK)
                                    throw new Error(c[n3]);
                                if (this.header = new f(),
                                r.inflateGetHeader(this.strm, this.header),
                                t3.dictionary && ("string" == typeof t3.dictionary ? t3.dictionary = s.string2buf(t3.dictionary) : "[object ArrayBuffer]" === h.call(t3.dictionary) && (t3.dictionary = new Uint8Array(t3.dictionary)),
                                t3.raw && (n3 = r.inflateSetDictionary(this.strm, t3.dictionary)) !== u.Z_OK))
                                    throw new Error(c[n3]);
                            }
                            function o(e3, t3) {
                                var n3 = new i2(t3);
                                if (n3.push(e3, true),
                                n3.err)
                                    throw n3.msg || c[n3.err];
                                return n3.result;
                            }
                            var r = e2("./zlib/inflate")
                              , a = e2("./utils/common")
                              , s = e2("./utils/strings")
                              , u = e2("./zlib/constants")
                              , c = e2("./zlib/messages")
                              , l = e2("./zlib/zstream")
                              , f = e2("./zlib/gzheader")
                              , h = Object.prototype.toString;
                            i2.prototype.push = function(e3, t3) {
                                var n3, i3, o2, c2, l2, f2 = this.strm, d = this.options.chunkSize, b = this.options.dictionary, _ = false;
                                if (this.ended)
                                    return false;
                                i3 = t3 === ~~t3 ? t3 : true === t3 ? u.Z_FINISH : u.Z_NO_FLUSH,
                                "string" == typeof e3 ? f2.input = s.binstring2buf(e3) : "[object ArrayBuffer]" === h.call(e3) ? f2.input = new Uint8Array(e3) : f2.input = e3,
                                f2.next_in = 0,
                                f2.avail_in = f2.input.length;
                                do {
                                    if (0 === f2.avail_out && (f2.output = new a.Buf8(d),
                                    f2.next_out = 0,
                                    f2.avail_out = d),
                                    (n3 = r.inflate(f2, u.Z_NO_FLUSH)) === u.Z_NEED_DICT && b && (n3 = r.inflateSetDictionary(this.strm, b)),
                                    n3 === u.Z_BUF_ERROR && true === _ && (n3 = u.Z_OK,
                                    _ = false),
                                    n3 !== u.Z_STREAM_END && n3 !== u.Z_OK)
                                        return this.onEnd(n3),
                                        !(this.ended = true);
                                    f2.next_out && (0 !== f2.avail_out && n3 !== u.Z_STREAM_END && (0 !== f2.avail_in || i3 !== u.Z_FINISH && i3 !== u.Z_SYNC_FLUSH) || ("string" === this.options.to ? (o2 = s.utf8border(f2.output, f2.next_out),
                                    c2 = f2.next_out - o2,
                                    l2 = s.buf2string(f2.output, o2),
                                    f2.next_out = c2,
                                    f2.avail_out = d - c2,
                                    c2 && a.arraySet(f2.output, f2.output, o2, c2, 0),
                                    this.onData(l2)) : this.onData(a.shrinkBuf(f2.output, f2.next_out)))),
                                    0 === f2.avail_in && 0 === f2.avail_out && (_ = true);
                                } while ((0 < f2.avail_in || 0 === f2.avail_out) && n3 !== u.Z_STREAM_END);
                                return n3 === u.Z_STREAM_END && (i3 = u.Z_FINISH),
                                i3 === u.Z_FINISH ? (n3 = r.inflateEnd(this.strm),
                                this.onEnd(n3),
                                this.ended = true,
                                n3 === u.Z_OK) : i3 !== u.Z_SYNC_FLUSH || (this.onEnd(u.Z_OK),
                                !(f2.avail_out = 0));
                            }
                            ,
                            i2.prototype.onData = function(e3) {
                                this.chunks.push(e3);
                            }
                            ,
                            i2.prototype.onEnd = function(e3) {
                                e3 === u.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = a.flattenChunks(this.chunks)),
                                this.chunks = [],
                                this.err = e3,
                                this.msg = this.strm.msg;
                            }
                            ,
                            n2.Inflate = i2,
                            n2.inflate = o,
                            n2.inflateRaw = function(e3, t3) {
                                return (t3 = t3 || {}).raw = true,
                                o(e3, t3);
                            }
                            ,
                            n2.ungzip = o;
                        }
                        , {
                            "./utils/common": 1,
                            "./utils/strings": 2,
                            "./zlib/constants": 4,
                            "./zlib/gzheader": 6,
                            "./zlib/inflate": 8,
                            "./zlib/messages": 10,
                            "./zlib/zstream": 11
                        }]
                    }, {}, [])("/lib/inflate.js");
                });
            }
            ]);
        });
    }
});
export default require_stdin();
